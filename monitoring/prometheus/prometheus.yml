# Prometheus Configuration for Spontra Platform
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'spontra-platform'
    environment: 'development'

# Rule files
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alert manager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics
    scrape_interval: 30s

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # User Service
  - job_name: 'user-service'
    static_configs:
      - targets: ['host.docker.internal:8080']
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'user-service'

  # Search Service
  - job_name: 'search-service'
    static_configs:
      - targets: ['host.docker.internal:8081']
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'search-service'

  # Pricing Service
  - job_name: 'pricing-service'
    static_configs:
      - targets: ['host.docker.internal:8082']
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'pricing-service'

  # Data Ingestion Service
  - job_name: 'data-ingestion-service'
    static_configs:
      - targets: ['host.docker.internal:8083']
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'data-ingestion-service'

  # Redis Exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'redis'

  # PostgreSQL Exporter
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'postgres'

  # Elasticsearch Exporter
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch-exporter:9114']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'elasticsearch'

  # Container Metrics (cAdvisor)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'cadvisor'

  # OTEL Collector
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8889']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'otel-collector'

  # Jaeger Metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    metrics_path: /metrics
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'jaeger'

  # Application-specific metrics endpoints
  - job_name: 'spontra-business-metrics'
    static_configs:
      - targets:
        - 'host.docker.internal:8080'  # User service
        - 'host.docker.internal:8081'  # Search service
        - 'host.docker.internal:8082'  # Pricing service
        - 'host.docker.internal:8083'  # Data ingestion service
    metrics_path: /api/v1/metrics
    scrape_interval: 30s
    scrape_timeout: 15s
    relabel_configs:
      - source_labels: [__address__]
        regex: 'host.docker.internal:(.+)'
        target_label: service_port
        replacement: '${1}'
      - source_labels: [service_port]
        regex: '8080'
        target_label: service
        replacement: 'user-service'
      - source_labels: [service_port]
        regex: '8081'
        target_label: service
        replacement: 'search-service'
      - source_labels: [service_port]
        regex: '8082'
        target_label: service
        replacement: 'pricing-service'
      - source_labels: [service_port]
        regex: '8083'
        target_label: service
        replacement: 'data-ingestion-service'

# Remote write configuration (for long-term storage)
# Uncomment for production with external time series database
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint"
#     headers:
#       Authorization: "Bearer YOUR_TOKEN"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB