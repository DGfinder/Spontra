#!/bin/bash

# Pre-commit hook to detect potential secrets and API keys
# This script scans staged files for common patterns of sensitive data

set -e

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Flag to track if secrets were found
SECRETS_FOUND=0

echo "üîç Scanning for secrets and API keys..."

# Get list of staged files (excluding deleted files)
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    echo "‚úÖ No staged files to scan"
    exit 0
fi

# API Key patterns to detect
declare -a PATTERNS=(
    # Generic API keys
    "(?i)(api[_-]?key|apikey|api[_-]?secret|apisecret)['\"]?\s*[:=]\s*['\"]?[a-z0-9]{20,}"
    "(?i)(secret[_-]?key|secretkey|private[_-]?key|privatekey)['\"]?\s*[:=]\s*['\"]?[a-z0-9]{20,}"
    "(?i)(access[_-]?token|accesstoken|auth[_-]?token|authtoken)['\"]?\s*[:=]\s*['\"]?[a-z0-9]{20,}"
    "(?i)(client[_-]?secret|clientsecret|client[_-]?id|clientid)['\"]?\s*[:=]\s*['\"]?[a-z0-9]{20,}"
    
    # Specific service patterns
    "(?i)amadeus[_-]?(client[_-]?id|client[_-]?secret|api[_-]?key)['\"]?\s*[:=]\s*['\"]?[a-zA-Z0-9]{20,}"
    "(?i)youtube[_-]?api[_-]?key['\"]?\s*[:=]\s*['\"]?[a-zA-Z0-9_-]{30,}"
    "(?i)google[_-]?api[_-]?key['\"]?\s*[:=]\s*['\"]?[a-zA-Z0-9_-]{30,}"
    
    # AWS patterns
    "AKIA[0-9A-Z]{16}"
    "(?i)aws[_-]?(access[_-]?key|secret[_-]?key)['\"]?\s*[:=]\s*['\"]?[a-zA-Z0-9/+=]{20,}"
    
    # JWT tokens
    "eyJ[a-zA-Z0-9_-]+\.eyJ[a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+"
    
    # Database connection strings
    "(?i)(mongodb|mysql|postgres|redis)://[^\\s\"']+:[^\\s\"']+@[^\\s\"']+"
    
    # Generic long alphanumeric strings that might be secrets
    "['\"][a-zA-Z0-9]{32,}['\"]"
    "[a-zA-Z0-9_-]{40,}"
)

# File extensions to scan
SCAN_EXTENSIONS="\.(js|ts|jsx|tsx|json|yaml|yml|env|md|txt|go|py|sh|bash)$"

# Check each staged file
for FILE in $STAGED_FILES; do
    # Skip binary files and files we don't want to scan
    if [[ ! "$FILE" =~ $SCAN_EXTENSIONS ]] || [[ "$FILE" =~ \.(png|jpg|jpeg|gif|pdf|zip|tar|gz|exe|bin)$ ]]; then
        continue
    fi
    
    # Skip if file doesn't exist (might be deleted)
    if [ ! -f "$FILE" ]; then
        continue
    fi
    
    echo "üìÑ Scanning: $FILE"
    
    # Check for each pattern
    for PATTERN in "${PATTERNS[@]}"; do
        if grep -P "$PATTERN" "$FILE" > /dev/null 2>&1; then
            echo -e "${RED}üö® POTENTIAL SECRET DETECTED in $FILE${NC}"
            echo -e "${YELLOW}Pattern: $PATTERN${NC}"
            grep -n -P "$PATTERN" "$FILE" || true
            echo ""
            SECRETS_FOUND=1
        fi
    done
    
    # Check for specific known compromised Amadeus credentials
    if grep -q "hmbheJWBT4gAKNEDxVEC53MTavleW7M0\|yTGQ9nbTSbtByd5A" "$FILE"; then
        echo -e "${RED}üö® KNOWN COMPROMISED AMADEUS CREDENTIALS DETECTED in $FILE${NC}"
        echo -e "${RED}These credentials were previously exposed and must not be committed!${NC}"
        SECRETS_FOUND=1
    fi
    
    # Check for environment variable assignments that look suspicious
    if grep -P "(?i)^[A-Z_]+=(sk-|pk-|[a-zA-Z0-9]{20,})" "$FILE" > /dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  SUSPICIOUS ENVIRONMENT VARIABLE in $FILE${NC}"
        grep -n -P "(?i)^[A-Z_]+=(sk-|pk-|[a-zA-Z0-9]{20,})" "$FILE" || true
        echo ""
        # Don't set SECRETS_FOUND=1 for this, just warn
    fi
done

# Final result
if [ $SECRETS_FOUND -eq 1 ]; then
    echo ""
    echo -e "${RED}‚ùå COMMIT BLOCKED: Potential secrets detected!${NC}"
    echo ""
    echo "üõ°Ô∏è  Security Guidelines:"
    echo "1. Remove all API keys, secrets, and credentials from your code"
    echo "2. Use environment variables (.env.local) for sensitive data"
    echo "3. Add sensitive files to .gitignore"
    echo "4. Review the SECURITY_GUIDELINES.md for best practices"
    echo ""
    echo "üí° To bypass this check (NOT RECOMMENDED):"
    echo "   git commit --no-verify"
    echo ""
    exit 1
else
    echo -e "${GREEN}‚úÖ No secrets detected. Commit allowed.${NC}"
    exit 0
fi